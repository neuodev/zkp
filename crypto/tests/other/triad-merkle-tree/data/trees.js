module.exports = {
    firstTree: [
        [
            // leaves
            0n,
            1n,
            2n,
            3n,
            4n,
            5n,
            6n,
            7n,
            8n,
            9n,
            10n,
            11n,
            12n,
            13n,
            14n,
            15n,
            16n,
            17n,
            18n,
            19n,
            20n,
            21n,
            22n,
            23n,
            24n,
            25n,
            26n,
            27n,
            28n,
            29n,
            30n,
            31n,
            32n,
            33n,
            34n,
            35n,
            36n,
            37n,
            38n,
            39n,
            40n,
            41n,
            42n,
            43n,
            44n,
            45n,
            46n,
            47n,
        ],
        [
            8599452571108419911675042369134657596129797276905188988960674134744449929238n,
            16070431878087339506657234884858910435593423055199073760739081656581316900759n,
            12197577552371912899208309988818434770672577595862193397396590804797679389696n,
            7496610988839634771111508330863357991027365473196656192072361129984081300278n,
            18830739659795245825928512048284200611133387147022236046174275806044779245733n,
            3565515893168969266159632385652129381452587765482082803180886572590888685673n,
            1775722864549119804478823198580847134866236252859759873697720458949485335070n,
            8192606221998459114480605557900316938093035458581704454505316741308859293314n,
            1854094283131414506203299426757543478795371311710016887747058677953666655781n,
            8529141604685721731735067261281544074895661185193488371583409007596289032501n,
            16279618229918172259143420440440184741540809309936878562140678519879087363902n,
            1839201625589562503708704775172581064853270792034173314519711500041064428976n,
            21372724087202582483922081141635534006538772730278584772332574098422589795053n,
            11647354596431154339247135698892016833066536655491182964564804063824003562506n,
            7639621840719418427485569157786222704875880775617639349749635778943579906430n,
            21073182472749999207899881123860325052105093684785611556463264113934966952179n,
        ],
        [
            3355677267329742094122709354310721515348908336671784485618726837937057233278n,
            8457739023743769434463017991080892800862885754592214899662225756918605861002n,
            9862908604766151038892183117532351729727228343030059328234656788945551597768n,
            79213664818238625872558357258026925396327230761765156569107660300600866818n,
            2426539781911965898426783882740610371276585131568158794288228461589906477746n,
            19002495915289692878829409652539462462151104085652663030571088203709449351781n,
            16632243027538222111019097376666235127241419332798320161936876041693870627328n,
            12752480723420697292553298101215051225504216503985339424977768590737248136043n,
        ],
        [
            9651893119277131505511580496153564512475183187156091470528087006655904367897n,
            8109704758451116886689195863445952274272026479289655971943308800500678644949n,
            19060202072254316606083379330702749644002153433404297093888811270398331608365n,
            9578449833507636706547617001269063899079346839975571843343944678834338891462n,
        ],
        [
            20614395370693051592152190967905256086466384459214938791237766825416256646777n,
            3684084323922187059589490308786877973303067675665041142412996812822747428213n,
        ],
        [
            // root
            12753185508954422750017311997266342801189726650069898177355399165171228219801n,
        ],
    ],
    secondTree: [
        [
            // leaves
            124437n,
            431653n,
            904551n,
            180718n,
            578350n,
            562088n,
            825293n,
            129289n,
            993607n,
            262979n,
            493535n,
            762224n,
            726032n,
            327854n,
            897866n,
            655177n,
            768942n,
            575473n,
            825001n,
            553743n,
            25718n,
            575993n,
            515747n,
            28904n,
            66327n,
            441366n,
            864780n,
            382633n,
            749419n,
            86324n,
            158727n,
            55870n,
            76137n,
            979936n,
            516566n,
            91035n,
            484292n,
            161342n,
            52311n,
            239664n,
            134250n,
            121684n,
            906016n,
            974175n,
            311166n,
            872858n,
            217362n,
            562759n,
        ],
        [
            7145346664617897017711395432761507745408560746120409119406687742294073540666n,
            3885553364578211370567648146702640989407336972525132414687880595130006569193n,
            19542453923812299959085010942313994611884848339312596170547169750814574972671n,
            11592712924300491165731094906800380184139801177407706263540877727774481337392n,
            6565300842116504391189596746359719677544325129960599978274765648706088975546n,
            18837038336715601981671297929328558407788691538683868949036671616806577276165n,
            18602427325856514525902413966469353010026245318040526072213410612823935477790n,
            5310266929217709782164587356754685913946431133847590674190304388550461840948n,
            9870523532277183102301211887452101983697686994033547613681006224698919118663n,
            4435754263255761978226625914529274200989417593232475506244298227641799632564n,
            9715754417029888712718402668666147882622648442837518297833144491577886474566n,
            11460839094096803191856356576335479599588094142152855945316633352630997302913n,
            18545037065291200963476332077085114873387030365893471220757753651456955150674n,
            18074328343272870771892172062521688061853090890464463141702182323054847260620n,
            11204631658671452214357680222554450523617629115932112755946064148648374729898n,
            860232035917472047357612173192804991764960493203321626786515958947150639393n,
        ],
        [
            4259404050671536659216349678475015955847480973035230980192047719592959155710n,
            1202702846851531064543032407306509899476850524998774191499239127575243028247n,
            19065220947458492571153746921346399823540970772127476941895079393098424734971n,
            19488523050123117087982958115756960511614068524410444663136744134410329313964n,
            8980492618256854809576032025702515911651243068609020484186973912167490509743n,
            6117071297928443710828863091117797196491751190444562321208887273537466963805n,
            10926575788152233809923678204032502184652333722294878671164040653776797241560n,
            13624180805302287266822624713955395202377066519696655270761599323099687696988n,
        ],
        [
            15197730588175876183957913647605954203847714155382891378886522644379226553418n,
            19937159370462724128849591110133376534388289231110249502196894771019171538946n,
            2089634872878470161386225735969413311608960921891754361292781091083427299142n,
            7232601170305931219726534458600944475893795558896398433935836540805322951758n,
        ],
        [
            432841696208101407821872901872640019311372866961530475347880754508019481790n,
            14447612896262573435444994579990338378254086326465218600666238804585092791787n,
        ],
        [
            // root
            682077996850582266304606203179092218968898965900274999162038564485934229811n,
        ],
    ],
    thirdTree: {
        zeroValue:
            '0x667764c376602b72ef22218e1673c2cc8546201f9a77807570b3e5de137680d',
        root: '0x17b31de43ba4c687cf950ad00dfbe33df40047e79245b50bd1d9f87e622bf2af',
    },
    fourthTree: {
        // tree with leaves with bigInt values from 0 to 1535
        root: '0x103f515cb4b2349989c54df175f43ccc7909497e605c24f748dcc1f27e2f6110',
    },
};

/**
 // Generated by:
 $ node
 > let {poseidon} = require('circomlibjs')
 > let levels = 5
 > leavesNum = 2**(levels - 1) * 3
 > //
 > // firstTree
 > //
 > let nodes = [ Array(leavesNum).fill(BigInt(0)).map((e,i) => e + BigInt(i)), [], [], [], [], [] ]
 > for (i=0; i<leavesNum/3/1; i+=1) {nodes[1].push(poseidon([ nodes[0][3*i], nodes[0][3*i+1], nodes[0][3*i+2] ]));}
 > for (i=0; i<leavesNum/3/2; i+=1) {nodes[2].push(poseidon([ nodes[1][2*i], nodes[1][2*i+1] ]));}
 > for (i=0; i<leavesNum/3/4; i+=1) {nodes[3].push(poseidon([ nodes[2][2*i], nodes[2][2*i+1] ]));}
 > for (i=0; i<leavesNum/3/8; i+=1) {nodes[4].push(poseidon([ nodes[3][2*i], nodes[3][2*i+1] ]));}
 > for (i=0; i<leavesNum/3/16; i+=1){nodes[5].push(poseidon([ nodes[4][2*i], nodes[4][2*i+1] ]));}
 > //
 > // secondTree
 > //
 > nodes = [ Array(leavesNum).fill(BigInt(0)).map(e => BigInt(Math.floor(Math.random() * 1e6))), [], [], [], [], [] ]
 > for (i=0; i<leavesNum/3/1; i+=1) {nodes[1].push(poseidon([ nodes[0][3*i], nodes[0][3*i+1], nodes[0][3*i+2] ]));}
 > for (i=0; i<leavesNum/3/2; i+=1) {nodes[2].push(poseidon([ nodes[1][2*i], nodes[1][2*i+1] ]));}
 > for (i=0; i<leavesNum/3/4; i+=1) {nodes[3].push(poseidon([ nodes[2][2*i], nodes[2][2*i+1] ]));}
 > for (i=0; i<leavesNum/3/8; i+=1) {nodes[4].push(poseidon([ nodes[3][2*i], nodes[3][2*i+1] ]));}
 > for (i=0; i<leavesNum/3/16; i+=1){nodes[5].push(poseidon([ nodes[4][2*i], nodes[4][2*i+1] ]));}
 */
