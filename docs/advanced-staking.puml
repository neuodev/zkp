@startuml
'https://plantuml.com/sequence-diagram

title **Advanced staking**

'autonumber

<style>
</style>

hide footbox
actor "Staker" as staker

box "Smart Contracts on Polygon"
  database "Staking\n" as staking
  database "RewardMaster\n" as rMaster
  database "AdvancedStakeController\n" as aSCtrl
  database "MASP v.1\n(w/ proxy)" as pool
  database "RewardTreasury\n" as rTreasury
  database "$ZKP\nToken" as zkp
end box

staker -> staking ++ : ""stake(...,""\n\t""zZKPspendPubKey, zZKPcipherText,""\n\t""PRPspendPubKey, PRPcipherText)""
  staking -> staking ++ : ""_createStake()""
    staking -> zkp ++ : ""transferFrom(staker, Staking, stakedAmount)""
      staker --> staking : ""stakedAmount""
    deactivate
    opt ""if (_terms.isRewarded)""
      staking -> staking ++ : ""_sendStakedMsg()""
        'staking -> SMP: _encodeStakeActionType()
        'return
        staking -> rMaster ++ : ""onAction()""
          rMaster -> aSCtrl ++ : ""getRewardAdvice()""
            aSCtrl -> aSCtrl ++-- : ""checkAmount()""
            aSCtrl -> zkp ++ : ""transferFrom(treasury, MASP, rewardAmount)""
              rTreasury --> pool : ""rewardAmount""
            deactivate
            aSCtrl -> pool ++ : ""depositFor(""\n\t""zZKPspendPubKey,""\n\t""zZKPcipherText,""\n\t""PRPspendPubKey,""\n\t""PRPcipherText)""
              'pool -> pool ++-- : ""deposit()""
              note over pool
                Generates zZKP and PRP
                UTXOs; inserts leaves
                into tree; emits ciphertext.
              end note
            return
          return ""Advice""
        deactivate
      deactivate
    deactivate
  deactivate
  staker --> pool : check events emitted
end
@enduml
